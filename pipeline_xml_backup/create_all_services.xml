<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1145.v7f2433caa07f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.9.3"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.9.3">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>This pipeline creates the images for first time..</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <jenkins.triggers.ReverseBuildTrigger>
          <spec></spec>
          <upstreamProjects>create_kubernetes_cluster</upstreamProjects>
          <threshold>
            <name>SUCCESS</name>
            <ordinal>0</ordinal>
            <color>BLUE</color>
            <completeBuild>true</completeBuild>
          </threshold>
        </jenkins.triggers.ReverseBuildTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2660.vb_c0412dc4e6d">
    <script>pipeline {
    agent any
    stages {
        stage(&apos;clone_repo_application_services&apos;){
           steps {
               script{
                   try{
                   sh &apos;rm -rfv *&apos;   
                   dir(&apos;gcp-application-services&apos;){
                   git branch: &apos;main&apos;, changelog: false, credentialsId: &apos;git_credentials&apos;, poll: false, url: &apos;https://github.com/di-devops-poc/gcp-application-services&apos;
                   }
                  }
                  catch(err){
                      echo err.getMessage();
                      error(&apos;Error!!!&apos;)
                      
                  }
                }
            }
        }
        stage(&apos;create_all_services&apos;){
           steps {
               script{
                   try{
                   dir(&apos;gcp-devops-code&apos;){
                   git branch: &apos;main&apos;, changelog: false, credentialsId: &apos;git_credentials&apos;, poll: false, url: &apos;https://github.com/di-devops-poc/gcp-devops-code&apos;
                   }
				   dir(&apos;gcp-devops-code/devops_shell_scripts&apos;){
//					sh &apos;gcloud container clusters get-credentials demo --zone=us-central1-a&apos;
				    sh &apos;bash ${WORKSPACE}/gcp-devops-code/devops_shell_scripts/create_all_services.sh ${WORKSPACE}&apos;
				   }
                  }
                  catch(err){
                      echo err.getMessage();
                      error(&apos;Error!!!&apos;)
                      
                  }
                }
            }
        }
        
    }
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>